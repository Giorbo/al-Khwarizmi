__linkedListToAvl:
Questo metodo è stato implementato per trasformare una lista collegata in albero avl: prende come parametro 
l'indice, restituito dal metodo __getIndex, della struttura da cambiare. 
Scorre tutti gli elementi della lista collegata e li inserisce, uno alla volta, in un albero avl
temporaneo. Infine viene sostituita la lista collegata con l'albero avl appena creato.


__avlToLinkedList:
Questo metodo è l'inverso di __linkedListToAvl ma è stato implementato in maniera diversa: prende sempre
come parametro l'indice restituito dal metodo __getIndex ma utilizza anche la lista counterList per
scorrere tutti gli elementi dell'albero tramite un ciclo for, tramite il quale vengono sempre estratti
chiave e valore della radice. Successivamente le chiavi e i valori vengono inseriti ,uno ad uno, in una
lista collegata temporanea di supporto ed infine viene cancellata la radice, poi si sostituisce l'albero
avl con la lista temporanea.

insert:
Con questo metodo vengono inserite le coppie (key, value). Per prima cosa viene chiamata il metodo
__getIndex per individuare a quale posizione dell'array verrà inserito il valore in base alla chiave.
Viene effettuato un controllo per verificare che la struttura dati puntata dall'indice non sia vuota 
(in quel caso viene creata una lista collegata) e si richiama automaticamente il metodo insert della struttura dati corrispondente, incrementando
di 1 anche il contatore della counterList. A questo punto se il contatore di elementi è uguale ad r (quindi dopo un inserimento si raggiungono 6 elementi)
viene richiamato il metodo __linkedListToAvl per trasformare la struttura dati in albero avl.

delete:
Questo metodo permette di cancellare una chiave e il relativo valore dalla struttura dati.
Per prima cosa si controlla che la struttura dati puntata dalla chiave non sia vuota, altrimenti si solleva un errore. Si fa un ulteriore controllo per vedere se nella struttura dati è presente solo l'elemento da cancellare, in caso affermativo si assegna al valore della struttra dati None e si resetta la counterList degli elementi. In caso contrario si elimina l'elemento e si riduce la counterList di 1. Nel caso in cui la counterList dopo una cancellazione sia uguale ad r-1 si richiama il metodo __avlToLinkedList per trasformare la struttra dati in una lista collegata.

search:
Questo è il metodo che permette di ritornare un valore presente nel dizionario a partire da una chiave. Prende come parametro la chiave e calcola l'indice della struttura dati corrispondente attraverso la funzione __getIndex. Viene fatto un controllo per verificare che la struttura dati puntata non sia vuota. Poi si ritorna semplicemente il risultato della funzione search della struttura dati corrispondente.